{
  "openapi": "3.0.0",
  "info": {
    "title": "My API",
    "description": "This API is used to connect to a MongoDB Database and perform CRUD operations on a collection.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://coup-api.onrender.com",
      "description": "Production server"
    },
    {
      "url": "http://localhost:5000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/players/": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "By default no ID will result in all players. If ID is provided, only that player will be returned",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "description": "Player object to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Player"
              }
            }
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the player to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "requestBody": {
          "description": "Player object to be updated",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Player"
              }
            }
          }
        }
      },
      "delete": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the player to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Player": {
        "type": "object",
        "properties": {
          "user_name": {
            "type": "string",
            "example": "username"
          },
          "is_online": {
            "type": "boolean",
            "example": false
          },
          "in_game": {
            "type": "boolean",
            "example": false
          },
          "email": {
            "type": "string",
            "example": "email@email.com"
          },
          "first_name": {
            "type": "string",
            "example": "first_name"
          },
          "last_name": {
            "type": "string",
            "example": "last_name"
          },
          "last_login": {
            "type": "string",
            "example": "YYYY-MM-DD"
          },
          "games_played": {
            "type": "number",
            "example": 0
          },
          "games_won": {
            "type": "number",
            "example": 0
          }
        }
      },
      "Card": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "name_of_card"
          },
          "effect": {
            "type": "string",
            "example": "action_description"
          },
          "action": {
            "type": "string",
            "example": "action"
          },
          "influence": {
            "type": "boolean",
            "example": true
          },
          "counter_action": {
            "type": "string",
            "example": "counter_action"
          }
        }
      }
    }
  }
}